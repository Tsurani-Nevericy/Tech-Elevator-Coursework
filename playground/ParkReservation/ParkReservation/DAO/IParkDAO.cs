using ParkReservation.Models;
using ParkReservation.Models.Database;
using System;
using System.Collections.Generic;

namespace ParkReservation
{
    /// <summary>
    /// The dao interface for the park reservation database
    /// </summary>
    public interface IParkDAO
    {
        /// <summary>
        /// Adds a row to the park table
        /// </summary>
        /// <param name="park">The park item containing the data to add</param>
        /// <returns>The autogenerated primary key</returns>
        int AddPark(ParkItem park);

        /// <summary>
        /// Gets all of the rows from the park table
        /// </summary>
        /// <returns>List of park items</returns>
        List<ParkItem> GetParks();

        /// <summary>
        /// Adds a row to the campground table
        /// </summary>
        /// <param name="campground">The campground item containing the data to add</param>
        /// <returns>The autogenerated primary key</returns>
        int AddCampground(CampgroundItem campground);

        /// <summary>
        /// Gets all of the rows from the campground table
        /// </summary>
        /// <returns>List of campround items</returns>
        List<CampgroundItem> GetCampgrounds(int parkId);

        /// <summary>
        /// Adds a row to the site table
        /// </summary>
        /// <param name="site">The site item containing the data to add</param>
        /// <returns>The autogenerated primary key</returns>
        int AddSite(SiteItem site);

        /// <summary>
        /// Gets all of the rows from the site table
        /// </summary>
        /// <returns>List of site items</returns>
        List<SiteItem> GetSites(ReservationInfo info);

        /// <summary>
        /// Creates a reservation in the reservation table and associates it with a user
        /// </summary>
        /// <param name="item">The reservation item to be saved</param>
        /// <param name="userId">The id of the user to associate with the reservation</param>
        /// <returns>The autogenerated primary key for the reservation</returns>
        int MakeReservation(ReservationItem item, int userId);

        /// <summary>
        /// Gets all the reservations for a given park from the current date to 30 days in the future
        /// </summary>
        /// <param name="parkId">The park id used to get reservations for</param>
        /// <returns>List of reservation history items</returns>
        List<ReservationHistory> GetReservationsForNext30Days(int parkId);

        /// <summary>
        /// Gets all the reservations for a given user
        /// </summary>
        /// <param name="userId">The user id used to get reservations for</param>
        /// <returns>List of reservation history items</returns>
        List<ReservationHistory> GetReservationsForUserId(int userId);
    }
}
